FORMAT: 1A
HOST: http://alde.tango-project.eu/v1

# Application Lifecycle Deployment Engine

The Application Lifecycle Deployment Engine is a component of the TANGO project: http://www.tango-project.eu .

It will be responsible of informing about the hetegoregenous resources in the different testbeds. Also, it will collect the application as input, compile it to the targetted testbed and, if possible, execute it.

The Application Lifececyle Deployment Engine is being developed by Atos Research and Innovation and its code it is being relased under an Apache 2.0 license: https://www.apache.org/licenses/LICENSE-2.0

## Testbeds [/testbeds]

### List all testbeds [GET]

+ Response 200 (application/json)

        [
            {
                id: 0,
                name: "nova_1",
                on_line: "true",
                type: "slurm",
                protocol: "ssh",
                endpoint: "user@172.0.0.1",
                package_formats: [
                    "docker",
                    "spack"
                ]
            },
            {
                id: 1,
                name: "embedded_1",
                on_line: "false",
                type: "embedded",
                protocol: "file",
                endpoint: "n/a",
                package_formats: [
                    "iso"
                ]
            }
        ]
        
### Create a new testbed [POST]

+ Request (application/json)

        {
            name: "nova_2",
            on_line: "true",
            type: "slurm",
            protocol: "ssh",
            endpoint: "user@172.0.0.2",
            package_formats: [
                "docker",
                "spack"
            ]
        }
    
+ Response 201 (application/json)

        { 
            id: 3,
            name: "nova_2",
            on_line: "true",
            type: "slurm",
            protocol: "ssh",
            endpoint: "user@172.0.0.2",
            package_formats: [
                "docker",
                "spack"
            ]
        }                                       

## Testbed [/testbeds/{testbed_id}]

+ Parameters
    + testbed_id (number) - ID of the testbed in the form of an integer
    
### View a testbed details [GET]

+ Response 200 (application/json)

        { 
            id: testbed_id,
            name: "nova_2il",
            on_line: "true",
            type: "slurm",
            protocol: "ssh",
            endpoint: "user@172.0.0.2",
            package_formats: [
                "docker",
                "spack"
            ]
        }

### Update of testbed details [PUT]

+ Request (application/json)

        {
            name: "nova_3",
        }
    
+ Response 200 (application/json)

        { 
            id: 3,
            name: "nova_3",
            on_line: "true",
            type: "slurm",
            protocol: "ssh",
            endpoint: "user@172.0.0.2",
            package_formats: [
                "docker",
                "spack"
            ]
        }   

### Delete of testbed detailes [DELETE]

This will delete the testbed from the ALDE database together with all the node information associated to that testbed
of 
+ Response 204

## Nodes [/testbeds/{testbed_id}/nodes]

+ Parameters
    + testbed_id (number) - ID of the testbed in the form of an integer
    
### List all nodes of a testbed [GET]

+ Response 200 (application/json)

        [
            {
                id: 1,
                name: "nd31",
                information_retrieved: "automatically",
                architecture: [
                    {
                        ram: {
                            size: 24595464,
                            units: "kilobyte"
                        }
                    },
                    {
                        cpu: {
                            vendor_id: "GenuineIntel",
                            arch: "x86_64",
                            model: "44",
                            model_name: "Intel(R) Xeon(R) CPU           E5640  @ 2.67GHz",
                            cpu_speed: "2660.000",
                            cache: {
                                size: 12288,
                                units: "kilobytes"
                            },
                            fpu: "true",
                            cpu_cores: 4,
                            flags: "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm arat epb dts tpr_shadow vnmi flexpriority ept vpid"
                        }
                    },
                    {     
                        cpu: {
                            vendor_id: "GenuineIntel",
                            arch: "x86_64",
                            model: "44",
                            model_name: "Intel(R) Xeon(R) CPU           E5640  @ 2.67GHz",
                            cpu_speed: "2660.000",
                            cache: {
                                size: 12288,
                                units: "kilobytes"
                            },
                            fpu: "true",
                            cpu_cores: 4,
                            flags: "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm arat epb dts tpr_shadow vnmi flexpriority ept vpid"
                        }
                    }.
                    {    
                        gpu: {
                            vendor_id: "NVIDIA",
                            model_name: "NVIDIA Corporation GF110GL [Tesla M2075] (rev a1)".
                            memory: [
                                {
                                    address: "9a000000",
                                    type: "32-bit, non-prefetchable",
                                    size: 16,
                                    unit: "megabytes"
                                },
                                {
                                    address: "90000000",
                                    type: "64-bit, prefetchable",
                                    size: 128,
                                    unit: "megabytes"
                                }
                                {
                                    address: "98000000",
                                    type: "64-bit, prefetchable",
                                    size: 32,
                                    unit: "megabytes"
                                }
                            ]
                        }
                    }
                ],
                status: {
                    slurm: {
                        cores_per_socket: "4",
                        cpu_alloc: "0",
                        cpu_error: "0",
                        cpu_total: "8",
                        cpu_load: "n/a",
                        real_memory: 24018,
                        alloc_memory: 0,
                        sockets: 2,
                        boards: 1,
                        state: "MAINT*",
                        threads_per_core: 1,
                        tmp_disk: 0,
                        weigth: 1,
                        current_watts: "0",
                        lowest_joules: "0",
                        consumed_joules: "0",
                        ext_sensors_joules: "n/s",
                        ext_sensors_watts: "0",
                        ext_sensors_temps: "n/s",
                        reason: "Node unexpectedly rebooted [slurm@2016-09-14T08:37:00]"
                        job: {
                            id: 65648,
                            usage_resources: 6
                        }
                    },
                    os: {
                        percentage_cpu: "150%",
                        free_ram: "232455"
                    },
                    energy: {
                        xxx: "yyy"
                    }
                }
            },
            {
                id: 2,
                name: "nd46",
                information_retrieved: "automatically",
                architecture: [
                    {
                        ram: {
                            size: 24595464,
                            units: "kilobyte"
                        }
                    },
                    {
                        cpu: {
                            vendor_id: "GenuineIntel",
                            arch: "x86_64",
                            model: "44",
                            model_name: "Intel(R) Xeon(R) CPU           E5640  @ 2.67GHz",
                            cpu_speed: "2660.000",
                            cache: {
                                size: 12288,
                                units: "kilobytes"
                            },
                            fpu: "true",
                            cpu_cores: 4,
                            flags: "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm arat epb dts tpr_shadow vnmi flexpriority ept vpid"
                        }
                    },
                    {     
                        cpu: {
                            vendor_id: "GenuineIntel",
                            arch: "x86_64",
                            model: "44",
                            model_name: "Intel(R) Xeon(R) CPU           E5640  @ 2.67GHz",
                            cpu_speed: "2660.000",
                            cache: {
                                size: 12288,
                                units: "kilobytes"
                            },
                            fpu: "true",
                            cpu_cores: 4,
                            flags: "fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush dts acpi mmx fxsr sse sse2 ss ht tm pbe syscall nx pdpe1gb rdtscp lm constant_tsc arch_perfmon pebs bts rep_good xtopology nonstop_tsc aperfmperf pni pclmulqdq dtes64 monitor ds_cpl vmx smx est tm2 ssse3 cx16 xtpr pdcm pcid dca sse4_1 sse4_2 popcnt aes lahf_lm arat epb dts tpr_shadow vnmi flexpriority ept vpid"
                        }
                    }.
                    {
                        mcp: {
                            vendor_id: "Intel Corporation",
                            model_name: "Intel Corporation Xeon Phi coprocessor 5100 series (rev 11)",
                            memory: [
                                {
                                    address: "181c00000000",
                                    type: "64-bit, prefetchable",
                                    size: 8,
                                    unit: "gigabyte"
                                },
                                {
                                    address: "91400000",
                                    type: "64-bit, non-prefetchable"
                                    size: "128"
                                    unit: "kilobyte"
                                }
                            ]
                        }
                    }
                ],
                status: {
                    slurm: {
                        cores_per_socket: "4",
                        cpu_alloc: "0",
                        cpu_error: "0",
                        cpu_total: "8",
                        cpu_load: "n/a",
                        real_memory: 24018,
                        alloc_memory: 0,
                        sockets: 2,
                        boards: 1,
                        state: "MAINT*",
                        threads_per_core: 1,
                        tmp_disk: 0,
                        weigth: 1,
                        current_watts: "0",
                        lowest_joules: "0",
                        consumed_joules: "0",
                        ext_sensors_joules: "n/s",
                        ext_sensors_watts: "0",
                        ext_sensors_temps: "n/s",
                        reason: "Node unexpectedly rebooted [slurm@2016-09-14T08:37:00]"
                        job: {
                            id: 65648,
                            usage_resources: 6
                        }
                    },
                    os: {
                        percentage_cpu: "150%",
                        free_ram: "232455"
                    },
                    energy: {
                        xxx: "yyy"
                    }
                }
            }
        ]

### Create a new node in a testbed [POST]

This is only possible for testbed where the node information is not gotten directly using some probes.

+ Request (application/json)

        {
            name: "embedded_node",
            architecture: [
                {
                    ram: {
                        size: 24595464,
                        unit: "kilobytes"
                    }
                },
                {   
                    cpu: {  
                        vendor_id: "ARM",
                        arch: "armv8",
                        model: "XXXX",
                        model_name: "ARM XXXX",
                        cpu_speed: "2660.000",
                        cache: {
                            size: 12288,
                            unit: "kilobyte"
                        },
                        fpu: "true",
                        cpu_cores: 2,
                        flags: "zzzz, yyyyy"
                },
                {
                    gpu: {
                        vendor_id: "NVIDIA",
                        model_name: "NVIDIA Corporation GF110GL [Tesla M2075] (rev a1)",
                        memory: [
                            {
                                address: "9a000000",
                                type: "32-bit, non-prefetchable",
                                size: "16",
                                unit: "megabyte"
                            }
                        }
                },
                {
                    fpga: {
                        Xxxx: "yyy",
                        zzzz: "aaaa"
                    }
                }
            ]
        }
    
+ Response 201 (application/json)

        {
            id: 1,
            name: "embedded_node",
            architecture: [
                {
                    ram: {
                        size: 24595464,
                        unit: "kilobytes"
                    }
                },
                {   
                    cpu: {  
                        vendor_id: "ARM",
                        arch: "armv8",
                        model: "XXXX",
                        model_name: "ARM XXXX",
                        cpu_speed: "2660.000",
                        cache: {
                            size: 12288,
                            unit: "kilobyte"
                        },
                        fpu: "true",
                        cpu_cores: 2,
                        flags: "zzzz, yyyyy"
                },
                {
                    gpu: {
                        vendor_id: "NVIDIA",
                        model_name: "NVIDIA Corporation GF110GL [Tesla M2075] (rev a1)",
                        memory: [
                            {
                                address: "9a000000",
                                type: "32-bit, non-prefetchable",
                                size: "16",
                                unit: "megabyte"
                            }
                        }
                },
                {
                    fpga: {
                        Xxxx: "yyy",
                        zzzz: "aaaa"
                    }
                }
            ]
        }